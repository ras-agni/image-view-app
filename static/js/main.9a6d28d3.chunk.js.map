{"version":3,"sources":["components/SearchBox.js","api/api.js","components/Image.js","components/ImageGallery.js","App.js","index.js"],"names":["SearchBox","input","setInput","className","onKeyDown","event","keyCode","target","value","type","placeholder","name","defaultValue","onClick","console","log","baseURL","clientId","getImages","a","fetch","res","json","getSearchImages","query","results","Image","urls","alt","handleClick","effect","src","thumb","regular","modalStyle","content","border","paddong","overflow","background","overlay","ImageGallery","useState","photo","setPhoto","currentImage","setcurrentImage","useEffect","then","data","trim","Modal","setAppElement","length","options","isFitWidth","map","img","alt_description","im","id","style","isOpen","onRequestClose","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAgCeA,MAhCf,YAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAU1B,OACE,sBAAKC,UAAU,yBAAf,UACE,uBACEC,UAZN,SAAsBC,GACE,KAAlBA,EAAMC,SAAgBJ,EAASG,EAAME,OAAOC,QAY5CC,KAAK,OACLC,YAAY,qBACZC,KAAK,QACLR,UAAU,eACVS,aAAcX,IAEhB,wBACEY,QAhBN,SAAqBR,GACnBS,QAAQC,IAAIV,IAgBRI,KAAK,SACLN,UAAU,oBACV,aAAYF,EAJd,wB,0CCpBAe,EAAU,4BACVC,EAAW,8CACJC,EAAS,uCAAG,8BAAAC,EAAA,+EAEHC,MAAM,GAAD,OAClBJ,EADkB,wCACqBC,GAC1C,IAJmB,cAEfI,EAFe,gBAMFA,EAAIC,OANF,cAMfA,EANe,yBAOdA,GAPc,kCASrBR,QAAQC,IAAI,SATS,0DAAH,qDAaTQ,EAAe,uCAAG,WAAOC,GAAP,iBAAAL,EAAA,+EAETC,MAAM,GAAD,OAClBJ,EADkB,2CACwBQ,EADxB,sBAC2CP,GAChE,IAJyB,cAErBI,EAFqB,gBAMRA,EAAIC,OANI,cAMrBA,EANqB,yBAOpBA,EAAKG,SAPe,kCAS3BX,QAAQC,IAAI,SATe,0DAAH,sD,eCAbW,MAZf,YAA4C,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,YAC1B,OACE,cAAC,gBAAD,CACEC,OAAO,OACPC,IAAKJ,EAAKK,MACVJ,IAAKA,EACLzB,UAAU,aACVU,QAAS,kBAAMgB,EAAYF,EAAKM,a,iBCJhCC,EAAa,CACjBC,QAAS,CACPC,OAAQ,OACRC,QAAS,OACTC,SAAU,OACVC,WAAY,QAEdC,QAAS,CAAED,WAAY,wBA2DVE,MAzDf,YAAkC,IAAVjB,EAAS,EAATA,MACtB,EAA0BkB,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,MAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAiBA,OAhBAC,qBAAU,WACR7B,IAAY8B,MAAK,SAACC,GAChBL,EAASK,QAEV,IAEHF,qBAAU,WACa,KAAjBvB,EAAM0B,QAGV3B,EAAgBC,GAAOwB,MAAK,SAACC,GAC3BL,EAASK,QAEV,CAACzB,IAEJ2B,IAAMC,cAAc,SACfT,EAIH,gCACoB,IAAjBA,EAAMU,OAAe,gDAAyB,KAC/C,cAAC,IAAD,CAASlD,UAAU,UAAUmD,QAAS,CAAEC,YAAY,GAApD,SACGZ,EAAMa,KAAI,SAACC,GACV,OACE,oBAAiBtD,UAAU,MAA3B,SACE,cAAC,EAAD,CACEwB,KAAM8B,EAAI9B,KACVC,IAAK6B,EAAIC,gBACT7C,QAAS,WACPC,QAAQC,IAAI,UAEdc,YAAaiB,EACba,IAAE,KARGF,EAAIG,SAcnB,cAAC,IAAD,CACEC,MAAO3B,EACP4B,SAAUjB,EACVkB,eAAgB,kBAAMjB,EAAgB,OAHxC,SAKE,qBACEf,IAAKc,EACLjB,IAAI,UACJzB,UAAU,mCA9BT,6C,OClBI6D,MAbf,WACE,MAA0BtB,mBAAS,IAAnC,mBAAOzC,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKC,UAAU,UAAf,UACE,oDACA,cAAC,EAAD,CAAWF,MAAOA,EAAOC,SAAUA,IACnC,oBAAIC,UAAU,gBAAd,SACE,cAAC,EAAD,CAAcqB,MAAOvB,UCN7BgE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9a6d28d3.chunk.js","sourcesContent":["function SearchBox({ input, setInput }) {\r\n  function handleChange(event) {\r\n    if (event.keyCode === 13) setInput(event.target.value);\r\n  }\r\n\r\n  function handleClick(event) {\r\n    console.log(event);\r\n    //setInput(event.target.dataset.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-group mb-3 col-4\">\r\n      <input\r\n        onKeyDown={handleChange}\r\n        type=\"text\"\r\n        placeholder=\"Search the photo..\"\r\n        name=\"photo\"\r\n        className=\"form-control\"\r\n        defaultValue={input}\r\n      />\r\n      <button\r\n        onClick={handleClick}\r\n        type=\"button\"\r\n        className=\"btn btn-secondary\"\r\n        data-input={input}\r\n      >\r\n        Search\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","const baseURL = \"https://api.unsplash.com/\";\r\nconst clientId = \"VBnr9gIahOXlJppkIbkLcSo6YjvgsXXRx13rHm9faE0\";\r\nexport const getImages = async () => {\r\n  try {\r\n    const res = await fetch(\r\n      `${baseURL}photos?per_page=30&client_id=${clientId}`,\r\n      {}\r\n    );\r\n    const json = await res.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const getSearchImages = async (query) => {\r\n  try {\r\n    const res = await fetch(\r\n      `${baseURL}search/photos?per_page=30&query=${query}&client_id=${clientId}`,\r\n      {}\r\n    );\r\n    const json = await res.json();\r\n    return json.results;\r\n  } catch (error) {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n","import { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nfunction Image({ urls, alt, handleClick }) {\r\n  return (\r\n    <LazyLoadImage\r\n      effect=\"blur\"\r\n      src={urls.thumb}\r\n      alt={alt}\r\n      className=\"image_list\"\r\n      onClick={() => handleClick(urls.regular)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import { useEffect, useState } from \"react\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport { getImages, getSearchImages } from \"../api/api\";\r\nimport Image from \"./Image\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst modalStyle = {\r\n  content: {\r\n    border: \"none\",\r\n    paddong: \"none\",\r\n    overflow: \"none\",\r\n    background: \"none\",\r\n  },\r\n  overlay: { background: \"rgb(31 29 29 / 75%)\" },\r\n};\r\nfunction ImageGallery({ query }) {\r\n  const [photo, setPhoto] = useState([]);\r\n  const [currentImage, setcurrentImage] = useState(null);\r\n  useEffect(() => {\r\n    getImages().then((data) => {\r\n      setPhoto(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (query.trim() === \"\") {\r\n      return;\r\n    }\r\n    getSearchImages(query).then((data) => {\r\n      setPhoto(data);\r\n    });\r\n  }, [query]);\r\n\r\n  Modal.setAppElement(\"#root\");\r\n  if (!photo) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      {photo.length === 0 ? <p>No Images Found</p> : null}\r\n      <Masonry className=\"mx-auto\" options={{ isFitWidth: true }}>\r\n        {photo.map((img) => {\r\n          return (\r\n            <li key={img.id} className=\"p-2\">\r\n              <Image\r\n                urls={img.urls}\r\n                alt={img.alt_description}\r\n                onClick={() => {\r\n                  console.log(\"dscxz\");\r\n                }}\r\n                handleClick={setcurrentImage}\r\n                im\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </Masonry>\r\n      <Modal\r\n        style={modalStyle}\r\n        isOpen={!!currentImage}\r\n        onRequestClose={() => setcurrentImage(null)}\r\n      >\r\n        <img\r\n          src={currentImage}\r\n          alt=\"Preview\"\r\n          className=\"w-100 h-100 image_preview\"\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n","import { useState } from \"react\";\nimport SearchBox from \"./components/SearchBox\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport \"./App.css\";\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  return (\n    <div className=\"row m-0\">\n      <h2>Let's get started!</h2>\n      <SearchBox input={input} setInput={setInput} />\n      <ul className=\"list-unstyled\">\n        <ImageGallery query={input} />\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}